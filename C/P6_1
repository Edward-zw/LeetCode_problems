#include<stdio.h>
#include<stdlib.h>

char* convert(char* s, int numRows) {
    if(numRows == 1)
        return s;
	void destroyarr(char **, int , int );
	int length = 0;
	while (s[length] != '\0')
		length++;
	char **arr;
	arr = (char **)malloc(numRows * sizeof(char *));
	int tmp;
	for (tmp = 0; tmp < numRows; tmp++)
	{
		arr[tmp] = (char *)malloc(length * sizeof(char));
	}
	int i, j;
	for (i = 0; i < numRows; i++)
		for (j = 0; j < length; j++)
			arr[i][j] = '\0';
	i = 0;
	j = 0;
	int k = 0;
	while (s[k] != '\0')
	{
		if (i == 0)
		{
			while (i < (numRows - 1) && s[k] != '\0')
				arr[i++][j] = s[k++];
		}

		if (i == (numRows - 1))
		{
			while (i > 0 && s[k] != '\0')
				arr[i--][j++] = s[k++];
		}
	}
	char *ans;
	ans = (char *)malloc((length + 1) * sizeof(char));
	k = 0;
	for (i = 0; i < numRows; i++)
		for (j = 0; j < length; j++)
			if (arr[i][j] != '\0')
				ans[k++] = arr[i][j];
	ans[k] = '\0';
	destroyarr(arr, numRows, length);
	return ans;
	
}

void destroyarr(char **arr,int rows, int cols)
{
	int i;
	for (i = 0; i < rows; i++)
		free(arr[i]);
	free(arr);
}
